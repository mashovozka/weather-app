{"version":3,"sources":["components/CurrentLocation/currentLocation.module.sass","components/GoogleMaps/GoogleMaps.module.sass","components/OtherLocations/OtherLocations.module.sass","common/helpers/calcLocalTime.js","img/spinner.svg","img/sadEmoji.png","api/api.js","store/actions/currentLocation.action.js","components/CurrentLocation/CurrentLocation.js","common/helpers/calcWindDirection.js","store/actions/otherLocations.action.js","components/OtherLocations/OtherLocations.js","components/WeatherSearch/WeatherSearch.js","components/StickyAlert/StickyAlert.js","components/GoogleMaps/GoogleMaps.js","App.js","reportWebVitals.js","store/reducers/weather.reducer.js","store/store.js","index.js","components/WeatherSearch/WeatherSearch.module.sass"],"names":["module","exports","calcLocalTime","timeZone","greenwichTime","Date","setHours","getHours","getTimezoneOffset","localTime","hours","minutes","getMinutes","month","getMonth","date","getDate","API_KEY","instance","axios","create","baseURL","weatherApi","body","get","lat","lng","GET_MAIN_WEATHER_SUCCESS","GET_MAIN_WEATHER_FAILURE","weatherFailure","message","type","payload","setCurrentLocationWeather","weather","getCurrentLocationWeather","coords","dispatch","a","then","response","data","catch","error","CurrentLocation","useDispatch","useEffect","navigator","geolocation","getCurrentPosition","position","latitude","longitude","console","log","setError","useState","useSelector","state","currentLocationWeather","deg","convertTime","timeInSec","className","classes","wrapper","data-test","weatherWrapper","textWrapper","location","name","sys","country","timezone","weatherDetails","tempDetails","tempWrapper","tempImg","src","icon","alt","temp","Math","round","main","minAmdMax","description","feels_like","temp_max","temp_min","otherDetails","humidity","pressure","visibility","wind","speed","sunrise","sunset","preloader","spinner","sadFace","GET_OTHER_LOCATION_WEATHER","GET_OTHER_LOCATION_WEATHER_SUCCESS","DELETE_LOCATION","ADD_NEW_LOCATION_TO_LIST","addNewLocationToList","deleteLocation","setOtherLocationWeather","getOtherLocationWeather","OtherLocations","locations","otherLocations","newLocation","newOtherLocation","id","setId","isUnique","every","currentLocation","getWeatherFailure","map","style","opacity","Button","variant","deleteButton","onClick","locationId","setTimeout","cityName","weatherDetail","WeatherSearch","city","setCity","handleSelect","value","geocodeByAddress","results","getLatLng","info","searchOptions","types","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","autocompleteWrapper","placeholder","input","dropdown","length","border","suggestion","background","active","padding","ContainerStickyAlert","children","useSnackbar","enqueueSnackbar","closeSnackbar","alert","key","GoogleMaps","withScriptjs","withGoogleMap","mapRef","useRef","selectedLocation","setSelectedLocation","defaultZoom","defaultCenter","coord","lon","ref","url","onCloseClick","App","maxSnack","googleMapURL","loadingElement","height","containerElement","mapElement","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","weatherReducer","action","filter","middlewares","ReduxThunk","createStoreWithMiddleware","applyMiddleware","createStore","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.3119eb9a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherWrapper\":\"currentLocation_weatherWrapper__GdMHf\",\"textWrapper\":\"currentLocation_textWrapper__2PvQM\",\"location\":\"currentLocation_location__2f_6r\",\"date\":\"currentLocation_date__14ErJ\",\"weatherDetails\":\"currentLocation_weatherDetails__2QUfA\",\"tempDetails\":\"currentLocation_tempDetails__3biFn\",\"tempWrapper\":\"currentLocation_tempWrapper__2Eizi\",\"temp\":\"currentLocation_temp__3l_W2\",\"minAmdMax\":\"currentLocation_minAmdMax__2sJfu\",\"otherDetails\":\"currentLocation_otherDetails__2gIRH\",\"preloader\":\"currentLocation_preloader__MDtmR\",\"error\":\"currentLocation_error__2rNbP\",\"sadFace\":\"currentLocation_sadFace__1q4-O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cityName\":\"GoogleMaps_cityName__2CGnY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"locations\":\"OtherLocations_locations__2q0wA\",\"location\":\"OtherLocations_location__2ll1k\",\"infoWrapper\":\"OtherLocations_infoWrapper__1aiMz\",\"deleteButton\":\"OtherLocations_deleteButton__eTBgh\",\"cityName\":\"OtherLocations_cityName__2qQi2\",\"weatherDetails\":\"OtherLocations_weatherDetails__2N31c\",\"weatherDetail\":\"OtherLocations_weatherDetail__1ch5y\"};","export const calcLocalTime = (timeZone) => {\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n  const greenwichTime = new Date(new Date().setHours(new Date().getHours() + new Date().getTimezoneOffset()/60));\n  const localTime = new Date (greenwichTime.setHours(greenwichTime.getHours() + timeZone / 3600));\n  const hours = localTime.getHours();\n  const minutes = localTime.getMinutes();\n  const month = months[localTime.getMonth()];\n  const date = localTime.getDate();\n  const time = `${hours}:${minutes < 10 ? `0${minutes}` : minutes}, ${month} ${date}`\n  return time\n}\n","export default __webpack_public_path__ + \"static/media/spinner.b767aab4.svg\";","export default __webpack_public_path__ + \"static/media/sadEmoji.a66a02c5.png\";","import axios from 'axios';\n\nconst baseUrl = 'https://api.openweathermap.org/data/2.5';\nconst API_KEY = 'b8bf13ed5333b61d48834aebf903865a';\n\nconst instance = axios.create({\n  baseURL: baseUrl\n})\n\nexport const weatherApi = {\n  getWeatherByCoords(body){\n    return instance.get(`/weather?lat=${body.lat}&lon=${body.lng}&units=metric&appid=${API_KEY}`)\n  },\n  getWeatherByCityName(body){\n    return instance.get(`/weather?q=${body}&units=metric&appid=${API_KEY}`)\n  }\n};","import {weatherApi} from \"../../api/api\";\n\nexport const GET_MAIN_WEATHER_SUCCESS = 'GET_WEATHER_SUCCESS';\nexport const GET_MAIN_WEATHER_FAILURE = 'GET_WEATHER_FAILURE';\n\nexport const weatherFailure = (message) => ({type: GET_MAIN_WEATHER_FAILURE, payload: message});\n\nexport const setCurrentLocationWeather = (weather) => ({type: GET_MAIN_WEATHER_SUCCESS, payload: weather})\n\nexport const getCurrentLocationWeather = (coords) => async(dispatch) => {\n   await weatherApi.getWeatherByCoords(coords)\n    .then(response => {\n      dispatch(setCurrentLocationWeather(response.data))\n    })\n     .catch(error => {\n       dispatch(weatherFailure(error))\n     })\n}","import React, {useEffect, useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport classes from './currentLocation.module.sass';\nimport {calcLocalTime} from '../../common/helpers/calcLocalTime';\nimport {calcWindDirection} from '../../common/helpers/calcWindDirection';\nimport spinner from '../../img/spinner.svg';\nimport sadFace from '../../img/sadEmoji.png';\nimport {getCurrentLocationWeather} from \"../../store/actions/currentLocation.action\";\n\nexport default function CurrentLocation() {\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function(position) {\n      const {latitude, longitude} = position.coords;\n      console.log({latitude, longitude});\n      dispatch(getCurrentLocationWeather({lat:latitude, lng:longitude}));\n    },\n    function(error) {\n      setError(\"Can't find current location\")\n    }\n    );\n  }, [dispatch])\n\n   const [error, setError] = useState('')\n\n  const weather = useSelector(state => state.currentLocationWeather)\n  console.log(weather)\n  const convertTime = (timeInSec) => `${new Date(timeInSec * 1000).getHours()}:${new Date(timeInSec * 1000).getMinutes()}`\n\n  return (\n    <div className={classes.wrapper} data-test='component-currentLocation'>\n        <div className={classes.weatherWrapper}>\n          {!error &&\n          weather &&\n          <div className={classes.textWrapper} data-test=\"weather\">\n            <div className={classes.location}>{weather.name}, {weather.sys.country}</div>\n              <div className={classes.date}>{calcLocalTime(weather.timezone)}</div>\n              <div className={classes.weatherDetails}>\n                <div className={classes.tempDetails}>\n                  <div className={classes.tempWrapper}>\n                    <img\n                      className={classes.tempImg}\n                      src={`https://openweathermap.org/img/w/${weather.weather[0].icon}.png`}\n                      alt='weather img'\n                    />\n                    <div className={classes.temp}>\n                      {Math.round(weather.main.temp)}°C\n                    </div>\n                  </div>\n                  <div className={classes.minAmdMax}>\n                    <div>{weather.weather[0].description}</div>\n                    <div>feels like: {Math.round(weather.main.feels_like)}</div>\n                    <div>Max: {Math.round(weather.main.temp_max)}°C</div>\n                    <div>Min: {Math.round(weather.main.temp_min)}°C</div>\n                  </div>\n                </div>\n                <div className={classes.otherDetails}>\n                  <div>Humidity: {weather.main.humidity}%</div>\n                  <div>Pressure: {weather.main.pressure} hPa</div>\n                  <div>Visibility: {weather.visibility /1000}km</div>\n                  <div>Wind: {weather.wind.speed} m/s {calcWindDirection(weather.wind.deg)}</div>\n                  <div>\n                    <div>Sunrise: {convertTime(weather.sys.sunrise)}</div>\n                    <div>Sunset: {convertTime(weather.sys.sunset)}</div>\n                  </div>\n                </div>\n              </div>\n            </div>}\n            {!weather &&\n             !error &&\n              <div className={classes.preloader} data-test='spinner'>\n                  <img src={spinner} alt={'loading...'}/>\n              </div>\n            }\n          {error &&\n              <div>\n                <div className={classes.error}>\n                  {error}\n                </div>\n                <img src={sadFace} alt={''} className={classes.sadFace}/>\n              </div>\n          }\n          </div>\n  </div>\n  )\n}\n","export const calcWindDirection = function(deg){\n  if (deg>11.25 && deg<=33.75){\n    return \"NNE\";\n  }else if (deg>33.75 && deg<=56.25){\n    return \"ENE\";\n  }else if (deg>56.25 && deg<=78.75){\n    return \"E\";\n  }else if (deg>78.75 && deg<=101.25){\n    return \"ESE\";\n  }else if (deg>101.25 && deg<=123.75){\n    return \"ESE\";\n  }else if (deg>123.75 && deg<=146.25){\n    return \"SE\";\n  }else if (deg>146.25 && deg<=168.75){\n    return \"SSE\";\n  }else if (deg>168.75 && deg<=191.25){\n    return \"S\";\n  }else if (deg>191.25 && deg<=213.75){\n    return \"SSW\";\n  }else if (deg>213.75 && deg<=236.25){\n    return \"SW\";\n  }else if (deg>236.25 && deg<=258.75){\n    return \"WSW\";\n  }else if (deg>258.75 && deg<=281.25){\n    return \"W\";\n  }else if (deg>281.25 && deg<=303.75){\n    return \"WNW\";\n  }else if (deg>303.75 && deg<=326.25){\n    return \"NW\";\n  }else if (deg>326.25 && deg<=348.75){\n    return \"NNW\";\n  }else{\n    return \"N\"; \n  }\n}","import {weatherApi} from \"../../api/api\";\nimport {weatherFailure} from \"./currentLocation.action\";\n\nexport const GET_OTHER_LOCATION_WEATHER = 'GET_OTHER_LOCATION_WEATHER';\nexport const GET_OTHER_LOCATION_WEATHER_SUCCESS = 'GET_OTHER_LOCATION_WEATHER_SUCCESS';\nexport const DELETE_LOCATION = 'DELETE_LOCATION';\nexport const ADD_NEW_LOCATION_TO_LIST = 'ADD_NEW_LOCATION_TO_LIST';\n\nexport const addNewLocationToList = (body) => ({\n  type: ADD_NEW_LOCATION_TO_LIST,\n  payload: body\n})\n\nexport const deleteLocation = (body) => ({\n  type: DELETE_LOCATION,\n  payload: body\n})\n\n\nexport const setOtherLocationWeather = (weather) => ({\n  type: GET_OTHER_LOCATION_WEATHER_SUCCESS,\n  payload: weather\n})\n\nexport const getOtherLocationWeather = (coords) => async(dispatch) => {\n  await weatherApi.getWeatherByCoords(coords)\n    .then(response => {\n      dispatch(setOtherLocationWeather(response.data))\n    })\n    .catch(error => {\n      dispatch(weatherFailure(error))\n    })\n}\n\n\n","import React, {useEffect, useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {currentLocation, otherLocations} from '../../store/actions/';\nimport classes from './OtherLocations.module.sass';\nimport {Button} from '@material-ui/core';\n\nexport default function OtherLocations() {\n\n  const locations = useSelector(state => state.otherLocations);\n  const newLocation = useSelector(state => state.newOtherLocation);\n  const dispatch = useDispatch();\n  const [id, setId] = useState('');\n  const isUnique = locations.every(location => location.id !== newLocation.id)\n\n  useEffect(() => {\n    newLocation &&\n    (isUnique\n    ? dispatch(otherLocations.addNewLocationToList(newLocation))\n    : dispatch(currentLocation.getWeatherFailure({ type: 'error', message: 'Location already exists' })))\n  }, [newLocation])\n\n  const removeLocation = (locationId) => {\n    setId(locationId);\n    setTimeout(() => {dispatch(otherLocations.deleteLocation(locationId))}, 1000)\n  }\n\n  return <div className={classes.locations}>\n    {locations.map(location => {\n      return <div key={location.id} className={classes.location} style={{opacity: `${id === location.id ? 0 : 1}`}}>\n        <Button\n          variant=\"outlined\"\n          className={classes.deleteButton}\n          onClick={() => removeLocation(location.id)}\n        >\n          delete\n        </Button>\n        <div className={classes.cityName}>{location.name}, {location.sys.country}</div>\n        <div className={classes.weatherDetails}>\n          <img\n            className={classes.tempImg}\n            src={`https://openweathermap.org/img/w/${location.weather[0].icon}.png`}\n            alt='weather img'\n          />\n          <span className={classes.weatherDetail}>{Math.round(location.main.temp)}°C</span>\n          <span className={classes.weatherDetail}>feels like: {Math.round(location.main.feels_like)}</span>\n        </div>\n      </div>\n    })}\n  </div>\n}\n","import React, {useState} from 'react';\nimport classes from './WeatherSearch.module.sass';\nimport {useDispatch} from 'react-redux';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\nimport {getOtherLocationWeather} from \"../../store/actions/otherLocations.action\";\n\nexport default function WeatherSearch() {\n\n  const [city, setCity] = useState('');\n\n  const dispatch = useDispatch();\n\n  const searchOptions = {\n    types: ['(cities)']\n  };\n\n  const handleSelect = async value => {\n    const results = await geocodeByAddress(value);\n    const coords = await getLatLng(results[0]);\n    dispatch(getOtherLocationWeather(coords))\n    setCity('')\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.info}>\n        <p>Type a city name and see its weather on the map!<br/>\n             Click the icon to expand.\n        </p>\n        <p>Впишите город и посмотрите его погоду на карте!<br/>\n           Кликните иконку для просмотра деталей\n        </p>\n      </div>\n      <PlacesAutocomplete\n          searchOptions={searchOptions}\n          value={city}\n          onChange={setCity}\n          onSelect={handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n            <div className={classes.autocompleteWrapper}>\n              <input {...getInputProps({\n                          placeholder: 'Type city',\n                          className: `${classes.input}`\n                      })}\n              />\n              <div className={classes.dropdown}\n                   style={{visibility: `${suggestions.length > 0 ? 'visible' : 'hidden'}`, border: '1px solid purple'}}\n              >\n                {loading ? <div>...loading</div> : null}\n                {suggestions.map((suggestion,id) => {\n                  const style = {\n                    background: suggestion.active ? '#E9DEFF' : 'white',\n                    padding: '3px 5px',\n                  }\n                  return (\n                          <div key={id} {...getSuggestionItemProps(suggestion, {style})}\n                          >\n                            {suggestion.description}\n                          </div>\n                      )\n                })}\n              </div>\n            </div>\n        )}\n      </PlacesAutocomplete>\n    </div>\n  )\n}\n","import { useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\nimport { useSnackbar } from 'notistack';\n\nconst ContainerStickyAlert = ({ children }) => {\n\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n    const alert = useSelector(state => state.error);\n\n    useEffect(() => {\n        if (alert && alert.message) {\n            const key = enqueueSnackbar(alert.message, {\n                variant: alert.type,\n                onClick: () => {\n                    closeSnackbar(key);\n                }\n            });\n        }\n    }, [alert, closeSnackbar, enqueueSnackbar]);\n\n    return children;\n};\n\nexport default ContainerStickyAlert;","import React, {useRef, useState} from 'react';\nimport {GoogleMap, InfoWindow, Marker, withGoogleMap, withScriptjs} from \"react-google-maps\";\nimport {useSelector} from \"react-redux\";\nimport classes from './GoogleMaps.module.sass';\n\nfunction Map() {\n  const mapRef = useRef();\n  const currentLocation = useSelector(state => state.currentLocationWeather)\n  const locations = useSelector(state => state.otherLocations);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n\n  return currentLocation && (\n    <GoogleMap\n      defaultZoom={1.5}\n      defaultCenter={{lat: currentLocation.coord.lat, lng: currentLocation.coord.lon}}\n      ref={mapRef}\n    >\n      <Marker\n        position={{lat: currentLocation.coord.lat, lng: currentLocation.coord.lon}}\n        onClick={() => {\n          setSelectedLocation(currentLocation)\n        }}\n        icon={{\n          url: `https://openweathermap.org/img/w/${currentLocation.weather[0].icon}.png`,\n        }}\n      />\n      {locations.map(location => (\n        <Marker\n          key={location.id}\n          position={{lat: location.coord.lat, lng: location.coord.lon}}\n          icon={{\n            url: `https://openweathermap.org/img/w/${location.weather[0].icon}.png`,\n          }}\n          onClick={() => {\n            setSelectedLocation(location)\n          }}\n\n        >\n        </Marker>\n      ))}\n      {selectedLocation &&\n      <InfoWindow\n        onCloseClick={() => {\n          setSelectedLocation(null);\n        }}\n        position={{lat: selectedLocation.coord.lat, lng: selectedLocation.coord.lon}}\n      >\n        <div>\n          <div className={classes.cityName}>{selectedLocation.name}, {selectedLocation.sys.country}</div>\n          <div>{Math.round(selectedLocation.main.temp)}°C</div>\n          <div>feels like: {Math.round(selectedLocation.main.feels_like)}</div>\n        </div>\n      </InfoWindow>\n      }\n    </GoogleMap>\n  )\n}\n\nconst GoogleMaps = withScriptjs(withGoogleMap(Map));\n\nexport default GoogleMaps;\n\n","import './App.css';\nimport CurrentLocation from './components/CurrentLocation/CurrentLocation';\nimport OtherLocations from './components/OtherLocations/OtherLocations';\nimport WeatherSearch from './components/WeatherSearch/WeatherSearch';\nimport ContainerStickyAlert from './components/StickyAlert/StickyAlert';\nimport { SnackbarProvider } from 'notistack';\nimport GoogleMaps from \"./components/GoogleMaps/GoogleMaps\";\n\nfunction App() {\n  return (\n      <SnackbarProvider maxSnack={10}>\n        <ContainerStickyAlert>\n          <div className='wrapper' data-test='appComponent'>\n            <h1 className='header'>WEATHER APP</h1>\n              <div className='content-wrapper'>\n                <div className='MainInfo'>\n                  <CurrentLocation/>\n                </div>\n                <div className='otherLocations'>\n                  <WeatherSearch/>\n                  <OtherLocations/>\n                </div>\n                <div className='MapsWrapper'>\n                    <GoogleMaps\n                      googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyCSCREDVjbJ-WOVvD2JTWGCViXbwgjbyP0`}\n                      loadingElement={<div style={{ height: `100%` }} />}\n                      containerElement={<div style={{ height: `400px` }} />}\n                      mapElement={<div style={{ height: `100%` }} />}\n                    />\n               </div>\n              </div>\n          </div>\n         </ContainerStickyAlert>\n       </SnackbarProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {currentLocation, otherLocations } from '../actions/';\n\nconst initialState = {\n  currentLocationWeather: '',\n  otherLocations: [],\n  newOtherLocation: '',\n  error: ''\n}\n\nconst weatherReducer = (state = initialState, action) => {\n  switch(action.type){\n    case currentLocation.GET_MAIN_WEATHER_SUCCESS:\n        return {\n          ...state,\n          currentLocationWeather: action.payload\n        }\n      case otherLocations.GET_OTHER_LOCATION_WEATHER_SUCCESS:\n          return {\n            ...state,\n            newOtherLocation: action.payload,\n          }\n    case otherLocations.ADD_NEW_LOCATION_TO_LIST:\n          return {\n            ...state,\n            otherLocations: [ action.payload, ...state.otherLocations]\n          }\n    case currentLocation.GET_MAIN_WEATHER_FAILURE:\n      return {\n        ...state,\n        error: action.payload\n      }\n    case otherLocations.DELETE_LOCATION:\n        return {\n          ...state,\n          otherLocations: state.otherLocations.filter(location => location.id !== action.payload)\n        }\n    default:\n      return state\n  }\n}\n\nexport default weatherReducer;","import {applyMiddleware, compose, createStore} from \"redux\";\nimport weatherReducer from \"./reducers/weather.reducer\";\nimport ReduxThunk from 'redux-thunk';\n\nexport const middlewares = [ReduxThunk];\nconst createStoreWithMiddleware = applyMiddleware(...middlewares)(createStore);\n\nexport default createStoreWithMiddleware(weatherReducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from './store/store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"WeatherSearch_wrapper__1_jcp\",\"autocompleteWrapper\":\"WeatherSearch_autocompleteWrapper__AiDbZ\",\"input\":\"WeatherSearch_input__13Hi_\",\"dropdown\":\"WeatherSearch_dropdown__1sL4x\",\"info\":\"WeatherSearch_info__1A3NP\"};"],"sourceRoot":""}